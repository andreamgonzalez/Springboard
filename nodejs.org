"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <meta name=\"nodejs.org:node-version\" content=\"v19.4.0\">\n  <title>Console | Node.js v19.4.0 Documentation</title>\n  <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Lato:400,700,400italic&display=fallback\">\n  <link rel=\"stylesheet\" href=\"assets/style.css\">\n  <link rel=\"stylesheet\" href=\"assets/hljs.css\">\n  <link rel=\"canonical\" href=\"https://nodejs.org/api/console.html\">\n  <script async defer src=\"assets/api.js\" type=\"text/javascript\"></script>\n  \n</head>\n<body class=\"alt apidoc\" id=\"api-section-console\">\n  <div id=\"content\" class=\"clearfix\">\n    <div id=\"column2\" class=\"interior\">\n      <div id=\"intro\" class=\"interior\">\n        <a href=\"/\" title=\"Go back to the home page\">\n          Node.js\n        </a>\n      </div>\n      <ul>\n<li><a href=\"documentation.html\" class=\"nav-documentation\">About this documentation</a></li>\n<li><a href=\"synopsis.html\" class=\"nav-synopsis\">Usage and example</a></li>\n</ul>\n<hr class=\"line\">\n<ul>\n<li><a href=\"assert.html\" class=\"nav-assert\">Assertion testing</a></li>\n<li><a href=\"async_context.html\" class=\"nav-async_context\">Asynchronous context tracking</a></li>\n<li><a href=\"async_hooks.html\" class=\"nav-async_hooks\">Async hooks</a></li>\n<li><a href=\"buffer.html\" class=\"nav-buffer\">Buffer</a></li>\n<li><a href=\"addons.html\" class=\"nav-addons\">C++ addons</a></li>\n<li><a href=\"n-api.html\" class=\"nav-n-api\">C/C++ addons with Node-API</a></li>\n<li><a href=\"embedding.html\" class=\"nav-embedding\">C++ embedder API</a></li>\n<li><a href=\"child_process.html\" class=\"nav-child_process\">Child processes</a></li>\n<li><a href=\"cluster.html\" class=\"nav-cluster\">Cluster</a></li>\n<li><a href=\"cli.html\" class=\"nav-cli\">Command-line options</a></li>\n<li><a href=\"console.html\" class=\"nav-console active\">Console</a></li>\n<li><a href=\"corepack.html\" class=\"nav-corepack\">Corepack</a></li>\n<li><a href=\"crypto.html\" class=\"nav-crypto\">Crypto</a></li>\n<li><a href=\"debugger.html\" class=\"nav-debugger\">Debugger</a></li>\n<li><a href=\"deprecations.html\" class=\"nav-deprecations\">Deprecated APIs</a></li>\n<li><a href=\"diagnostics_channel.html\" class=\"nav-diagnostics_channel\">Diagnostics Channel</a></li>\n<li><a href=\"dns.html\" class=\"nav-dns\">DNS</a></li>\n<li><a href=\"domain.html\" class=\"nav-domain\">Domain</a></li>\n<li><a href=\"errors.html\" class=\"nav-errors\">Errors</a></li>\n<li><a href=\"events.html\" class=\"nav-events\">Events</a></li>\n<li><a href=\"fs.html\" class=\"nav-fs\">File system</a></li>\n<li><a href=\"globals.html\" class=\"nav-globals\">Globals</a></li>\n<li><a href=\"http.html\" class=\"nav-http\">HTTP</a></li>\n<li><a href=\"http2.html\" class=\"nav-http2\">HTTP/2</a></li>\n<li><a href=\"https.html\" class=\"nav-https\">HTTPS</a></li>\n<li><a href=\"inspector.html\" class=\"nav-inspector\">Inspector</a></li>\n<li><a href=\"intl.html\" class=\"nav-intl\">Internationalization</a></li>\n<li><a href=\"modules.html\" class=\"nav-modules\">Modules: CommonJS modules</a></li>\n<li><a href=\"esm.html\" class=\"nav-esm\">Modules: ECMAScript modules</a></li>\n<li><a href=\"module.html\" class=\"nav-module\">Modules: <code>node:module</code> API</a></li>\n<li><a href=\"packages.html\" class=\"nav-packages\">Modules: Packages</a></li>\n<li><a href=\"net.html\" class=\"nav-net\">Net</a></li>\n<li><a href=\"os.html\" class=\"nav-os\">OS</a></li>\n<li><a href=\"path.html\" class=\"nav-path\">Path</a></li>\n<li><a href=\"perf_hooks.html\" class=\"nav-perf_hooks\">Performance hooks</a></li>\n<li><a href=\"permissions.html\" class=\"nav-permissions\">Permissions</a></li>\n<li><a href=\"process.html\" class=\"nav-process\">Process</a></li>\n<li><a href=\"punycode.html\" class=\"nav-punycode\">Punycode</a></li>\n<li><a href=\"querystring.html\" class=\"nav-querystring\">Query strings</a></li>\n<li><a href=\"readline.html\" class=\"nav-readline\">Readline</a></li>\n<li><a href=\"repl.html\" class=\"nav-repl\">REPL</a></li>\n<li><a href=\"report.html\" class=\"nav-report\">Report</a></li>\n<li><a href=\"stream.html\" class=\"nav-stream\">Stream</a></li>\n<li><a href=\"string_decoder.html\" class=\"nav-string_decoder\">String decoder</a></li>\n<li><a href=\"test.html\" class=\"nav-test\">Test runner</a></li>\n<li><a href=\"timers.html\" class=\"nav-timers\">Timers</a></li>\n<li><a href=\"tls.html\" class=\"nav-tls\">TLS/SSL</a></li>\n<li><a href=\"tracing.html\" class=\"nav-tracing\">Trace events</a></li>\n<li><a href=\"tty.html\" class=\"nav-tty\">TTY</a></li>\n<li><a href=\"dgram.html\" class=\"nav-dgram\">UDP/datagram</a></li>\n<li><a href=\"url.html\" class=\"nav-url\">URL</a></li>\n<li><a href=\"util.html\" class=\"nav-util\">Utilities</a></li>\n<li><a href=\"v8.html\" class=\"nav-v8\">V8</a></li>\n<li><a href=\"vm.html\" class=\"nav-vm\">VM</a></li>\n<li><a href=\"wasi.html\" class=\"nav-wasi\">WASI</a></li>\n<li><a href=\"webcrypto.html\" class=\"nav-webcrypto\">Web Crypto API</a></li>\n<li><a href=\"webstreams.html\" class=\"nav-webstreams\">Web Streams API</a></li>\n<li><a href=\"worker_threads.html\" class=\"nav-worker_threads\">Worker threads</a></li>\n<li><a href=\"zlib.html\" class=\"nav-zlib\">Zlib</a></li>\n</ul>\n<hr class=\"line\">\n<ul>\n<li><a href=\"https://github.com/nodejs/node\" class=\"nav-https-github-com-nodejs-node\">Code repository and issue tracker</a></li>\n</ul>\n    </div>\n\n    <div id=\"column1\" data-id=\"console\" class=\"interior\">\n      <header class=\"header\">\n        <div class=\"header-container\">\n          <h1>Node.js v19.4.0 documentation</h1>\n          <button class=\"theme-toggle-btn\" id=\"theme-toggle-btn\" title=\"Toggle dark mode/light mode\" aria-label=\"Toggle dark mode/light mode\" hidden>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon dark-icon\" height=\"24\" width=\"24\">\n              <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n              <path d=\"M11.1 12.08c-2.33-4.51-.5-8.48.53-10.07C6.27 2.2 1.98 6.59 1.98 12c0 .14.02.28.02.42.62-.27 1.29-.42 2-.42 1.66 0 3.18.83 4.1 2.15A4.01 4.01 0 0111 18c0 1.52-.87 2.83-2.12 3.51.98.32 2.03.5 3.11.5 3.5 0 6.58-1.8 8.37-4.52-2.36.23-6.98-.97-9.26-5.41z\"/>\n              <path d=\"M7 16h-.18C6.4 14.84 5.3 14 4 14c-1.66 0-3 1.34-3 3s1.34 3 3 3h3c1.1 0 2-.9 2-2s-.9-2-2-2z\"/>\n            </svg>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon light-icon\" height=\"24\" width=\"24\">\n              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n              <path d=\"M6.76 4.84l-1.8-1.79-1.41 1.41 1.79 1.79 1.42-1.41zM4 10.5H1v2h3v-2zm9-9.95h-2V3.5h2V.55zm7.45 3.91l-1.41-1.41-1.79 1.79 1.41 1.41 1.79-1.79zm-3.21 13.7l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4zM20 10.5v2h3v-2h-3zm-8-5c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm-1 16.95h2V19.5h-2v2.95zm-7.45-3.91l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8z\"/>\n            </svg>\n          </button>\n        </div>\n        <div id=\"gtoc\">\n          <ul>\n            <li class=\"pinned-header\">Node.js v19.4.0</li>\n            \n    <li class=\"picker-header\">\n      <a href=\"#\">\n        <span class=\"collapsed-arrow\">&#x25ba;</span><span class=\"expanded-arrow\">&#x25bc;</span>\n        Table of contents\n      </a>\n\n      <div class=\"picker\"><div class=\"toc\"><ul>\n<li><span class=\"stability_2\"><a href=\"#console\">Console</a></span>\n<ul>\n<li><a href=\"#class-console\">Class: <code>Console</code></a>\n<ul>\n<li><a href=\"#new-consolestdout-stderr-ignoreerrors\"><code>new Console(stdout[, stderr][, ignoreErrors])</code></a></li>\n<li><a href=\"#new-consoleoptions\"><code>new Console(options)</code></a></li>\n<li><a href=\"#consoleassertvalue-message\"><code>console.assert(value[, ...message])</code></a></li>\n<li><a href=\"#consoleclear\"><code>console.clear()</code></a></li>\n<li><a href=\"#consolecountlabel\"><code>console.count([label])</code></a></li>\n<li><a href=\"#consolecountresetlabel\"><code>console.countReset([label])</code></a></li>\n<li><a href=\"#consoledebugdata-args\"><code>console.debug(data[, ...args])</code></a></li>\n<li><a href=\"#consoledirobj-options\"><code>console.dir(obj[, options])</code></a></li>\n<li><a href=\"#consoledirxmldata\"><code>console.dirxml(...data)</code></a></li>\n<li><a href=\"#consoleerrordata-args\"><code>console.error([data][, ...args])</code></a></li>\n<li><a href=\"#consolegrouplabel\"><code>console.group([...label])</code></a></li>\n<li><a href=\"#consolegroupcollapsed\"><code>console.groupCollapsed()</code></a></li>\n<li><a href=\"#consolegroupend\"><code>console.groupEnd()</code></a></li>\n<li><a href=\"#consoleinfodata-args\"><code>console.info([data][, ...args])</code></a></li>\n<li><a href=\"#consolelogdata-args\"><code>console.log([data][, ...args])</code></a></li>\n<li><a href=\"#consoletabletabulardata-properties\"><code>console.table(tabularData[, properties])</code></a></li>\n<li><a href=\"#consoletimelabel\"><code>console.time([label])</code></a></li>\n<li><a href=\"#consoletimeendlabel\"><code>console.timeEnd([label])</code></a></li>\n<li><a href=\"#consoletimeloglabel-data\"><code>console.timeLog([label][, ...data])</code></a></li>\n<li><a href=\"#consoletracemessage-args\"><code>console.trace([message][, ...args])</code></a></li>\n<li><a href=\"#consolewarndata-args\"><code>console.warn([data][, ...args])</code></a></li>\n</ul>\n</li>\n<li><a href=\"#inspector-only-methods\">Inspector only methods</a>\n<ul>\n<li><a href=\"#consoleprofilelabel\"><code>console.profile([label])</code></a></li>\n<li><a href=\"#consoleprofileendlabel\"><code>console.profileEnd([label])</code></a></li>\n<li><a href=\"#consoletimestamplabel\"><code>console.timeStamp([label])</code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul></div></div>\n    </li>\n  \n            \n    <li class=\"picker-header\">\n      <a href=\"#\">\n        <span class=\"collapsed-arrow\">&#x25ba;</span><span class=\"expanded-arrow\">&#x25bc;</span>\n        Index\n      </a>\n\n      <div class=\"picker\"><ul>\n<li><a href=\"documentation.html\" class=\"nav-documentation\">About this documentation</a></li>\n<li><a href=\"synopsis.html\" class=\"nav-synopsis\">Usage and example</a></li>\n\n      <li>\n        <a href=\"index.html\">Index</a>\n      </li>\n    </ul>\n  \n<hr class=\"line\">\n<ul>\n<li><a href=\"assert.html\" class=\"nav-assert\">Assertion testing</a></li>\n<li><a href=\"async_context.html\" class=\"nav-async_context\">Asynchronous context tracking</a></li>\n<li><a href=\"async_hooks.html\" class=\"nav-async_hooks\">Async hooks</a></li>\n<li><a href=\"buffer.html\" class=\"nav-buffer\">Buffer</a></li>\n<li><a href=\"addons.html\" class=\"nav-addons\">C++ addons</a></li>\n<li><a href=\"n-api.html\" class=\"nav-n-api\">C/C++ addons with Node-API</a></li>\n<li><a href=\"embedding.html\" class=\"nav-embedding\">C++ embedder API</a></li>\n<li><a href=\"child_process.html\" class=\"nav-child_process\">Child processes</a></li>\n<li><a href=\"cluster.html\" class=\"nav-cluster\">Cluster</a></li>\n<li><a href=\"cli.html\" class=\"nav-cli\">Command-line options</a></li>\n<li><a href=\"console.html\" class=\"nav-console active\">Console</a></li>\n<li><a href=\"corepack.html\" class=\"nav-corepack\">Corepack</a></li>\n<li><a href=\"crypto.html\" class=\"nav-crypto\">Crypto</a></li>\n<li><a href=\"debugger.html\" class=\"nav-debugger\">Debugger</a></li>\n<li><a href=\"deprecations.html\" class=\"nav-deprecations\">Deprecated APIs</a></li>\n<li><a href=\"diagnostics_channel.html\" class=\"nav-diagnostics_channel\">Diagnostics Channel</a></li>\n<li><a href=\"dns.html\" class=\"nav-dns\">DNS</a></li>\n<li><a href=\"domain.html\" class=\"nav-domain\">Domain</a></li>\n<li><a href=\"errors.html\" class=\"nav-errors\">Errors</a></li>\n<li><a href=\"events.html\" class=\"nav-events\">Events</a></li>\n<li><a href=\"fs.html\" class=\"nav-fs\">File system</a></li>\n<li><a href=\"globals.html\" class=\"nav-globals\">Globals</a></li>\n<li><a href=\"http.html\" class=\"nav-http\">HTTP</a></li>\n<li><a href=\"http2.html\" class=\"nav-http2\">HTTP/2</a></li>\n<li><a href=\"https.html\" class=\"nav-https\">HTTPS</a></li>\n<li><a href=\"inspector.html\" class=\"nav-inspector\">Inspector</a></li>\n<li><a href=\"intl.html\" class=\"nav-intl\">Internationalization</a></li>\n<li><a href=\"modules.html\" class=\"nav-modules\">Modules: CommonJS modules</a></li>\n<li><a href=\"esm.html\" class=\"nav-esm\">Modules: ECMAScript modules</a></li>\n<li><a href=\"module.html\" class=\"nav-module\">Modules: <code>node:module</code> API</a></li>\n<li><a href=\"packages.html\" class=\"nav-packages\">Modules: Packages</a></li>\n<li><a href=\"net.html\" class=\"nav-net\">Net</a></li>\n<li><a href=\"os.html\" class=\"nav-os\">OS</a></li>\n<li><a href=\"path.html\" class=\"nav-path\">Path</a></li>\n<li><a href=\"perf_hooks.html\" class=\"nav-perf_hooks\">Performance hooks</a></li>\n<li><a href=\"permissions.html\" class=\"nav-permissions\">Permissions</a></li>\n<li><a href=\"process.html\" class=\"nav-process\">Process</a></li>\n<li><a href=\"punycode.html\" class=\"nav-punycode\">Punycode</a></li>\n<li><a href=\"querystring.html\" class=\"nav-querystring\">Query strings</a></li>\n<li><a href=\"readline.html\" class=\"nav-readline\">Readline</a></li>\n<li><a href=\"repl.html\" class=\"nav-repl\">REPL</a></li>\n<li><a href=\"report.html\" class=\"nav-report\">Report</a></li>\n<li><a href=\"stream.html\" class=\"nav-stream\">Stream</a></li>\n<li><a href=\"string_decoder.html\" class=\"nav-string_decoder\">String decoder</a></li>\n<li><a href=\"test.html\" class=\"nav-test\">Test runner</a></li>\n<li><a href=\"timers.html\" class=\"nav-timers\">Timers</a></li>\n<li><a href=\"tls.html\" class=\"nav-tls\">TLS/SSL</a></li>\n<li><a href=\"tracing.html\" class=\"nav-tracing\">Trace events</a></li>\n<li><a href=\"tty.html\" class=\"nav-tty\">TTY</a></li>\n<li><a href=\"dgram.html\" class=\"nav-dgram\">UDP/datagram</a></li>\n<li><a href=\"url.html\" class=\"nav-url\">URL</a></li>\n<li><a href=\"util.html\" class=\"nav-util\">Utilities</a></li>\n<li><a href=\"v8.html\" class=\"nav-v8\">V8</a></li>\n<li><a href=\"vm.html\" class=\"nav-vm\">VM</a></li>\n<li><a href=\"wasi.html\" class=\"nav-wasi\">WASI</a></li>\n<li><a href=\"webcrypto.html\" class=\"nav-webcrypto\">Web Crypto API</a></li>\n<li><a href=\"webstreams.html\" class=\"nav-webstreams\">Web Streams API</a></li>\n<li><a href=\"worker_threads.html\" class=\"nav-worker_threads\">Worker threads</a></li>\n<li><a href=\"zlib.html\" class=\"nav-zlib\">Zlib</a></li>\n</ul>\n<hr class=\"line\">\n<ul>\n<li><a href=\"https://github.com/nodejs/node\" class=\"nav-https-github-com-nodejs-node\">Code repository and issue tracker</a></li>\n</ul></div>\n    </li>\n  \n            \n    <li class=\"picker-header\">\n      <a href=\"#\">\n        <span class=\"collapsed-arrow\">&#x25ba;</span><span class=\"expanded-arrow\">&#x25bc;</span>\n        Other versions\n      </a>\n      <div class=\"picker\"><ol id=\"alt-docs\"><li><a href=\"https://nodejs.org/docs/latest-v19.x/api/console.html\">19.x</a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v18.x/api/console.html\">18.x <b>LTS</b></a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v17.x/api/console.html\">17.x</a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v16.x/api/console.html\">16.x <b>LTS</b></a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v15.x/api/console.html\">15.x</a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v14.x/api/console.html\">14.x <b>LTS</b></a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v13.x/api/console.html\">13.x</a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v12.x/api/console.html\">12.x</a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v11.x/api/console.html\">11.x</a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v10.x/api/console.html\">10.x</a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v9.x/api/console.html\">9.x</a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v8.x/api/console.html\">8.x</a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v7.x/api/console.html\">7.x</a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v6.x/api/console.html\">6.x</a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v5.x/api/console.html\">5.x</a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v4.x/api/console.html\">4.x</a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v0.12.x/api/console.html\">0.12.x</a></li>\n<li><a href=\"https://nodejs.org/docs/latest-v0.10.x/api/console.html\">0.10.x</a></li></ol></div>\n    </li>\n  \n            <li class=\"picker-header\">\n              <a href=\"#\">\n                <span class=\"collapsed-arrow\">&#x25ba;</span><span class=\"expanded-arrow\">&#x25bc;</span>\n                Options\n              </a>\n        \n              <div class=\"picker\">\n                <ul>\n                  <li>\n                    <a href=\"all.html\">View on single page</a>\n                  </li>\n                  <li>\n                    <a href=\"console.json\">View as JSON</a>\n                  </li>\n                  <li class=\"edit_on_github\"><a href=\"https://github.com/nodejs/node/edit/main/doc/api/console.md\">Edit on GitHub</a></li>    \n                </ul>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <hr>\n      </header>\n\n      <details id=\"toc\" open><summary>Table of contents</summary><ul>\n<li><span class=\"stability_2\"><a href=\"#console\">Console</a></span>\n<ul>\n<li><a href=\"#class-console\">Class: <code>Console</code></a>\n<ul>\n<li><a href=\"#new-consolestdout-stderr-ignoreerrors\"><code>new Console(stdout[, stderr][, ignoreErrors])</code></a></li>\n<li><a href=\"#new-consoleoptions\"><code>new Console(options)</code></a></li>\n<li><a href=\"#consoleassertvalue-message\"><code>console.assert(value[, ...message])</code></a></li>\n<li><a href=\"#consoleclear\"><code>console.clear()</code></a></li>\n<li><a href=\"#consolecountlabel\"><code>console.count([label])</code></a></li>\n<li><a href=\"#consolecountresetlabel\"><code>console.countReset([label])</code></a></li>\n<li><a href=\"#consoledebugdata-args\"><code>console.debug(data[, ...args])</code></a></li>\n<li><a href=\"#consoledirobj-options\"><code>console.dir(obj[, options])</code></a></li>\n<li><a href=\"#consoledirxmldata\"><code>console.dirxml(...data)</code></a></li>\n<li><a href=\"#consoleerrordata-args\"><code>console.error([data][, ...args])</code></a></li>\n<li><a href=\"#consolegrouplabel\"><code>console.group([...label])</code></a></li>\n<li><a href=\"#consolegroupcollapsed\"><code>console.groupCollapsed()</code></a></li>\n<li><a href=\"#consolegroupend\"><code>console.groupEnd()</code></a></li>\n<li><a href=\"#consoleinfodata-args\"><code>console.info([data][, ...args])</code></a></li>\n<li><a href=\"#consolelogdata-args\"><code>console.log([data][, ...args])</code></a></li>\n<li><a href=\"#consoletabletabulardata-properties\"><code>console.table(tabularData[, properties])</code></a></li>\n<li><a href=\"#consoletimelabel\"><code>console.time([label])</code></a></li>\n<li><a href=\"#consoletimeendlabel\"><code>console.timeEnd([label])</code></a></li>\n<li><a href=\"#consoletimeloglabel-data\"><code>console.timeLog([label][, ...data])</code></a></li>\n<li><a href=\"#consoletracemessage-args\"><code>console.trace([message][, ...args])</code></a></li>\n<li><a href=\"#consolewarndata-args\"><code>console.warn([data][, ...args])</code></a></li>\n</ul>\n</li>\n<li><a href=\"#inspector-only-methods\">Inspector only methods</a>\n<ul>\n<li><a href=\"#consoleprofilelabel\"><code>console.profile([label])</code></a></li>\n<li><a href=\"#consoleprofileendlabel\"><code>console.profileEnd([label])</code></a></li>\n<li><a href=\"#consoletimestamplabel\"><code>console.timeStamp([label])</code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul></details>\n\n      <div id=\"apicontent\">\n        <h2>Console<span><a class=\"mark\" href=\"#console\" id=\"console\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console\"></a></h2>\n\n<p></p><div class=\"api_stability api_stability_2\"><a href=\"documentation.html#stability-index\">Stability: 2</a> - Stable</div><p></p>\n<p><strong>Source Code:</strong> <a href=\"https://github.com/nodejs/node/blob/v19.4.0/lib/console.js\">lib/console.js</a></p>\n<p>The <code>node:console</code> module provides a simple debugging console that is similar to\nthe JavaScript console mechanism provided by web browsers.</p>\n<p>The module exports two specific components:</p>\n<ul>\n<li>A <code>Console</code> class with methods such as <code>console.log()</code>, <code>console.error()</code>, and\n<code>console.warn()</code> that can be used to write to any Node.js stream.</li>\n<li>A global <code>console</code> instance configured to write to <a href=\"process.html#processstdout\"><code>process.stdout</code></a> and\n<a href=\"process.html#processstderr\"><code>process.stderr</code></a>. The global <code>console</code> can be used without calling\n<code>require('node:console')</code>.</li>\n</ul>\n<p><em><strong>Warning</strong></em>: The global console object's methods are neither consistently\nsynchronous like the browser APIs they resemble, nor are they consistently\nasynchronous like all other Node.js streams. See the <a href=\"process.html#a-note-on-process-io\">note on process I/O</a> for\nmore information.</p>\n<p>Example using the global <code>console</code>:</p>\n<pre><code class=\"language-js\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'hello world'</span>);\n<span class=\"hljs-comment\">// Prints: hello world, to stdout</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'hello %s'</span>, <span class=\"hljs-string\">'world'</span>);\n<span class=\"hljs-comment\">// Prints: hello world, to stdout</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">'Whoops, something bad happened'</span>));\n<span class=\"hljs-comment\">// Prints error message and stack trace to stderr:</span>\n<span class=\"hljs-comment\">//   Error: Whoops, something bad happened</span>\n<span class=\"hljs-comment\">//     at [eval]:5:15</span>\n<span class=\"hljs-comment\">//     at Script.runInThisContext (node:vm:132:18)</span>\n<span class=\"hljs-comment\">//     at Object.runInThisContext (node:vm:309:38)</span>\n<span class=\"hljs-comment\">//     at node:internal/process/execution:77:19</span>\n<span class=\"hljs-comment\">//     at [eval]-wrapper:6:22</span>\n<span class=\"hljs-comment\">//     at evalScript (node:internal/process/execution:76:60)</span>\n<span class=\"hljs-comment\">//     at node:internal/main/eval_string:23:3</span>\n\n<span class=\"hljs-keyword\">const</span> name = <span class=\"hljs-string\">'Will Robinson'</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">warn</span>(<span class=\"hljs-string\">`Danger <span class=\"hljs-subst\">${name}</span>! Danger!`</span>);\n<span class=\"hljs-comment\">// Prints: Danger Will Robinson! Danger!, to stderr</span></code></pre>\n<p>Example using the <code>Console</code> class:</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> out = <span class=\"hljs-title function_\">getStreamSomehow</span>();\n<span class=\"hljs-keyword\">const</span> err = <span class=\"hljs-title function_\">getStreamSomehow</span>();\n<span class=\"hljs-keyword\">const</span> myConsole = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title class_\">Console</span>(out, err);\n\nmyConsole.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'hello world'</span>);\n<span class=\"hljs-comment\">// Prints: hello world, to out</span>\nmyConsole.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'hello %s'</span>, <span class=\"hljs-string\">'world'</span>);\n<span class=\"hljs-comment\">// Prints: hello world, to out</span>\nmyConsole.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">'Whoops, something bad happened'</span>));\n<span class=\"hljs-comment\">// Prints: [Error: Whoops, something bad happened], to err</span>\n\n<span class=\"hljs-keyword\">const</span> name = <span class=\"hljs-string\">'Will Robinson'</span>;\nmyConsole.<span class=\"hljs-title function_\">warn</span>(<span class=\"hljs-string\">`Danger <span class=\"hljs-subst\">${name}</span>! Danger!`</span>);\n<span class=\"hljs-comment\">// Prints: Danger Will Robinson! Danger!, to err</span></code></pre>\n<section><h3>Class: <code>Console</code><span><a class=\"mark\" href=\"#class-console\" id=\"class-console\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_class_console\"></a></h3>\n<div class=\"api_metadata\">\n<details class=\"changelog\"><summary>History</summary>\n<table>\n<tbody><tr><th>Version</th><th>Changes</th></tr>\n<tr><td>v8.0.0</td>\n<td><p>Errors that occur while writing to the underlying streams will now be ignored by default.</p></td></tr>\n</tbody></table>\n</details>\n</div>\n\n<p>The <code>Console</code> class can be used to create a simple logger with configurable\noutput streams and can be accessed using either <code>require('node:console').Console</code>\nor <code>console.Console</code> (or their destructured counterparts):</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> { <span class=\"hljs-title class_\">Console</span> } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'node:console'</span>);</code></pre>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> { <span class=\"hljs-title class_\">Console</span> } = <span class=\"hljs-variable language_\">console</span>;</code></pre>\n<h4><code>new Console(stdout[, stderr][, ignoreErrors])</code><span><a class=\"mark\" href=\"#new-consolestdout-stderr-ignoreerrors\" id=\"new-consolestdout-stderr-ignoreerrors\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_new_console_stdout_stderr_ignoreerrors\"></a></h4>\n<h4><code>new Console(options)</code><span><a class=\"mark\" href=\"#new-consoleoptions\" id=\"new-consoleoptions\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_new_console_options\"></a></h4>\n<div class=\"api_metadata\">\n<details class=\"changelog\"><summary>History</summary>\n<table>\n<tbody><tr><th>Version</th><th>Changes</th></tr>\n<tr><td>v14.2.0, v12.17.0</td>\n<td><p>The <code>groupIndentation</code> option was introduced.</p></td></tr>\n<tr><td>v11.7.0</td>\n<td><p>The <code>inspectOptions</code> option is introduced.</p></td></tr>\n<tr><td>v10.0.0</td>\n<td><p>The <code>Console</code> constructor now supports an <code>options</code> argument, and the <code>colorMode</code> option was introduced.</p></td></tr>\n<tr><td>v8.0.0</td>\n<td><p>The <code>ignoreErrors</code> option was introduced.</p></td></tr>\n</tbody></table>\n</details>\n</div>\n<ul>\n<li><code>options</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\" class=\"type\">&#x3C;Object></a>\n<ul>\n<li><code>stdout</code> <a href=\"stream.html#class-streamwritable\" class=\"type\">&#x3C;stream.Writable></a></li>\n<li><code>stderr</code> <a href=\"stream.html#class-streamwritable\" class=\"type\">&#x3C;stream.Writable></a></li>\n<li><code>ignoreErrors</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type\" class=\"type\">&#x3C;boolean></a> Ignore errors when writing to the underlying\nstreams. <strong>Default:</strong> <code>true</code>.</li>\n<li><code>colorMode</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type\" class=\"type\">&#x3C;boolean></a> | <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\" class=\"type\">&#x3C;string></a> Set color support for this <code>Console</code> instance.\nSetting to <code>true</code> enables coloring while inspecting values. Setting to\n<code>false</code> disables coloring while inspecting values. Setting to\n<code>'auto'</code> makes color support depend on the value of the <code>isTTY</code> property\nand the value returned by <code>getColorDepth()</code> on the respective stream. This\noption can not be used, if <code>inspectOptions.colors</code> is set as well.\n<strong>Default:</strong> <code>'auto'</code>.</li>\n<li><code>inspectOptions</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\" class=\"type\">&#x3C;Object></a> Specifies options that are passed along to\n<a href=\"util.html#utilinspectobject-options\"><code>util.inspect()</code></a>.</li>\n<li><code>groupIndentation</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type\" class=\"type\">&#x3C;number></a> Set group indentation.\n<strong>Default:</strong> <code>2</code>.</li>\n</ul>\n</li>\n</ul>\n<p>Creates a new <code>Console</code> with one or two writable stream instances. <code>stdout</code> is a\nwritable stream to print log or info output. <code>stderr</code> is used for warning or\nerror output. If <code>stderr</code> is not provided, <code>stdout</code> is used for <code>stderr</code>.</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> output = fs.<span class=\"hljs-title function_\">createWriteStream</span>(<span class=\"hljs-string\">'./stdout.log'</span>);\n<span class=\"hljs-keyword\">const</span> errorOutput = fs.<span class=\"hljs-title function_\">createWriteStream</span>(<span class=\"hljs-string\">'./stderr.log'</span>);\n<span class=\"hljs-comment\">// Custom simple logger</span>\n<span class=\"hljs-keyword\">const</span> logger = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Console</span>({ <span class=\"hljs-attr\">stdout</span>: output, <span class=\"hljs-attr\">stderr</span>: errorOutput });\n<span class=\"hljs-comment\">// use it like console</span>\n<span class=\"hljs-keyword\">const</span> count = <span class=\"hljs-number\">5</span>;\nlogger.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'count: %d'</span>, count);\n<span class=\"hljs-comment\">// In stdout.log: count 5</span></code></pre>\n<p>The global <code>console</code> is a special <code>Console</code> whose output is sent to\n<a href=\"process.html#processstdout\"><code>process.stdout</code></a> and <a href=\"process.html#processstderr\"><code>process.stderr</code></a>. It is equivalent to calling:</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Console</span>({ <span class=\"hljs-attr\">stdout</span>: process.<span class=\"hljs-property\">stdout</span>, <span class=\"hljs-attr\">stderr</span>: process.<span class=\"hljs-property\">stderr</span> });</code></pre>\n<h4><code>console.assert(value[, ...message])</code><span><a class=\"mark\" href=\"#consoleassertvalue-message\" id=\"consoleassertvalue-message\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_assert_value_message\"></a></h4>\n<div class=\"api_metadata\">\n<details class=\"changelog\"><summary>History</summary>\n<table>\n<tbody><tr><th>Version</th><th>Changes</th></tr>\n<tr><td>v10.0.0</td>\n<td><p>The implementation is now spec compliant and does not throw anymore.</p></td></tr>\n<tr><td>v0.1.101</td>\n<td><p><span>Added in: v0.1.101</span></p></td></tr>\n</tbody></table>\n</details>\n</div>\n<ul>\n<li><code>value</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a> The value tested for being truthy.</li>\n<li><code>...message</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a> All arguments besides <code>value</code> are used as error message.</li>\n</ul>\n<p><code>console.assert()</code> writes a message if <code>value</code> is <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Falsy\">falsy</a> or omitted. It only\nwrites a message and does not otherwise affect execution. The output always\nstarts with <code>\"Assertion failed\"</code>. If provided, <code>message</code> is formatted using\n<a href=\"util.html#utilformatformat-args\"><code>util.format()</code></a>.</p>\n<p>If <code>value</code> is <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Truthy\">truthy</a>, nothing happens.</p>\n<pre><code class=\"language-js\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">assert</span>(<span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">'does nothing'</span>);\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">assert</span>(<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">'Whoops %s work'</span>, <span class=\"hljs-string\">'didn\\'t'</span>);\n<span class=\"hljs-comment\">// Assertion failed: Whoops didn't work</span>\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">assert</span>();\n<span class=\"hljs-comment\">// Assertion failed</span></code></pre>\n<h4><code>console.clear()</code><span><a class=\"mark\" href=\"#consoleclear\" id=\"consoleclear\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_clear\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v8.3.0</span>\n</div>\n<p>When <code>stdout</code> is a TTY, calling <code>console.clear()</code> will attempt to clear the\nTTY. When <code>stdout</code> is not a TTY, this method does nothing.</p>\n<p>The specific operation of <code>console.clear()</code> can vary across operating systems\nand terminal types. For most Linux operating systems, <code>console.clear()</code>\noperates similarly to the <code>clear</code> shell command. On Windows, <code>console.clear()</code>\nwill clear only the output in the current terminal viewport for the Node.js\nbinary.</p>\n<h4><code>console.count([label])</code><span><a class=\"mark\" href=\"#consolecountlabel\" id=\"consolecountlabel\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_count_label\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v8.3.0</span>\n</div>\n<ul>\n<li><code>label</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\" class=\"type\">&#x3C;string></a> The display label for the counter. <strong>Default:</strong> <code>'default'</code>.</li>\n</ul>\n<p>Maintains an internal counter specific to <code>label</code> and outputs to <code>stdout</code> the\nnumber of times <code>console.count()</code> has been called with the given <code>label</code>.</p>\n<!-- eslint-skip -->\n<pre><code class=\"language-js\">> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">count</span>()\n<span class=\"hljs-attr\">default</span>: <span class=\"hljs-number\">1</span>\n<span class=\"hljs-literal\">undefined</span>\n> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">count</span>(<span class=\"hljs-string\">'default'</span>)\n<span class=\"hljs-attr\">default</span>: <span class=\"hljs-number\">2</span>\n<span class=\"hljs-literal\">undefined</span>\n> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">count</span>(<span class=\"hljs-string\">'abc'</span>)\n<span class=\"hljs-attr\">abc</span>: <span class=\"hljs-number\">1</span>\n<span class=\"hljs-literal\">undefined</span>\n> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">count</span>(<span class=\"hljs-string\">'xyz'</span>)\n<span class=\"hljs-attr\">xyz</span>: <span class=\"hljs-number\">1</span>\n<span class=\"hljs-literal\">undefined</span>\n> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">count</span>(<span class=\"hljs-string\">'abc'</span>)\n<span class=\"hljs-attr\">abc</span>: <span class=\"hljs-number\">2</span>\n<span class=\"hljs-literal\">undefined</span>\n> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">count</span>()\n<span class=\"hljs-attr\">default</span>: <span class=\"hljs-number\">3</span>\n<span class=\"hljs-literal\">undefined</span>\n></code></pre>\n<h4><code>console.countReset([label])</code><span><a class=\"mark\" href=\"#consolecountresetlabel\" id=\"consolecountresetlabel\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_countreset_label\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v8.3.0</span>\n</div>\n<ul>\n<li><code>label</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\" class=\"type\">&#x3C;string></a> The display label for the counter. <strong>Default:</strong> <code>'default'</code>.</li>\n</ul>\n<p>Resets the internal counter specific to <code>label</code>.</p>\n<!-- eslint-skip -->\n<pre><code class=\"language-js\">> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">count</span>(<span class=\"hljs-string\">'abc'</span>);\n<span class=\"hljs-attr\">abc</span>: <span class=\"hljs-number\">1</span>\n<span class=\"hljs-literal\">undefined</span>\n> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">countReset</span>(<span class=\"hljs-string\">'abc'</span>);\n<span class=\"hljs-literal\">undefined</span>\n> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">count</span>(<span class=\"hljs-string\">'abc'</span>);\n<span class=\"hljs-attr\">abc</span>: <span class=\"hljs-number\">1</span>\n<span class=\"hljs-literal\">undefined</span>\n></code></pre>\n<h4><code>console.debug(data[, ...args])</code><span><a class=\"mark\" href=\"#consoledebugdata-args\" id=\"consoledebugdata-args\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_debug_data_args\"></a></h4>\n<div class=\"api_metadata\">\n<details class=\"changelog\"><summary>History</summary>\n<table>\n<tbody><tr><th>Version</th><th>Changes</th></tr>\n<tr><td>v8.10.0</td>\n<td><p><code>console.debug</code> is now an alias for <code>console.log</code>.</p></td></tr>\n<tr><td>v8.0.0</td>\n<td><p><span>Added in: v8.0.0</span></p></td></tr>\n</tbody></table>\n</details>\n</div>\n<ul>\n<li><code>data</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n<li><code>...args</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n</ul>\n<p>The <code>console.debug()</code> function is an alias for <a href=\"#consolelogdata-args\"><code>console.log()</code></a>.</p>\n<h4><code>console.dir(obj[, options])</code><span><a class=\"mark\" href=\"#consoledirobj-options\" id=\"consoledirobj-options\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_dir_obj_options\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v0.1.101</span>\n</div>\n<ul>\n<li><code>obj</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n<li><code>options</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\" class=\"type\">&#x3C;Object></a>\n<ul>\n<li><code>showHidden</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type\" class=\"type\">&#x3C;boolean></a> If <code>true</code> then the object's non-enumerable and symbol\nproperties will be shown too. <strong>Default:</strong> <code>false</code>.</li>\n<li><code>depth</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type\" class=\"type\">&#x3C;number></a> Tells <a href=\"util.html#utilinspectobject-options\"><code>util.inspect()</code></a> how many times to recurse while\nformatting the object. This is useful for inspecting large complicated\nobjects. To make it recurse indefinitely, pass <code>null</code>. <strong>Default:</strong> <code>2</code>.</li>\n<li><code>colors</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type\" class=\"type\">&#x3C;boolean></a> If <code>true</code>, then the output will be styled with ANSI color\ncodes. Colors are customizable;\nsee <a href=\"util.html#customizing-utilinspect-colors\">customizing <code>util.inspect()</code> colors</a>. <strong>Default:</strong> <code>false</code>.</li>\n</ul>\n</li>\n</ul>\n<p>Uses <a href=\"util.html#utilinspectobject-options\"><code>util.inspect()</code></a> on <code>obj</code> and prints the resulting string to <code>stdout</code>.\nThis function bypasses any custom <code>inspect()</code> function defined on <code>obj</code>.</p>\n<h4><code>console.dirxml(...data)</code><span><a class=\"mark\" href=\"#consoledirxmldata\" id=\"consoledirxmldata\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_dirxml_data\"></a></h4>\n<div class=\"api_metadata\">\n<details class=\"changelog\"><summary>History</summary>\n<table>\n<tbody><tr><th>Version</th><th>Changes</th></tr>\n<tr><td>v9.3.0</td>\n<td><p><code>console.dirxml</code> now calls <code>console.log</code> for its arguments.</p></td></tr>\n<tr><td>v8.0.0</td>\n<td><p><span>Added in: v8.0.0</span></p></td></tr>\n</tbody></table>\n</details>\n</div>\n<ul>\n<li><code>...data</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n</ul>\n<p>This method calls <code>console.log()</code> passing it the arguments received.\nThis method does not produce any XML formatting.</p>\n<h4><code>console.error([data][, ...args])</code><span><a class=\"mark\" href=\"#consoleerrordata-args\" id=\"consoleerrordata-args\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_error_data_args\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v0.1.100</span>\n</div>\n<ul>\n<li><code>data</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n<li><code>...args</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n</ul>\n<p>Prints to <code>stderr</code> with newline. Multiple arguments can be passed, with the\nfirst used as the primary message and all additional used as substitution\nvalues similar to <a href=\"http://man7.org/linux/man-pages/man3/printf.3.html\"><code>printf(3)</code></a> (the arguments are all passed to\n<a href=\"util.html#utilformatformat-args\"><code>util.format()</code></a>).</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> code = <span class=\"hljs-number\">5</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">'error #%d'</span>, code);\n<span class=\"hljs-comment\">// Prints: error #5, to stderr</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">'error'</span>, code);\n<span class=\"hljs-comment\">// Prints: error 5, to stderr</span></code></pre>\n<p>If formatting elements (e.g. <code>%d</code>) are not found in the first string then\n<a href=\"util.html#utilinspectobject-options\"><code>util.inspect()</code></a> is called on each argument and the resulting string\nvalues are concatenated. See <a href=\"util.html#utilformatformat-args\"><code>util.format()</code></a> for more information.</p>\n<h4><code>console.group([...label])</code><span><a class=\"mark\" href=\"#consolegrouplabel\" id=\"consolegrouplabel\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_group_label\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v8.5.0</span>\n</div>\n<ul>\n<li><code>...label</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n</ul>\n<p>Increases indentation of subsequent lines by spaces for <code>groupIndentation</code>\nlength.</p>\n<p>If one or more <code>label</code>s are provided, those are printed first without the\nadditional indentation.</p>\n<h4><code>console.groupCollapsed()</code><span><a class=\"mark\" href=\"#consolegroupcollapsed\" id=\"consolegroupcollapsed\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_groupcollapsed\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v8.5.0</span>\n</div>\n<p>An alias for <a href=\"#consolegrouplabel\"><code>console.group()</code></a>.</p>\n<h4><code>console.groupEnd()</code><span><a class=\"mark\" href=\"#consolegroupend\" id=\"consolegroupend\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_groupend\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v8.5.0</span>\n</div>\n<p>Decreases indentation of subsequent lines by spaces for <code>groupIndentation</code>\nlength.</p>\n<h4><code>console.info([data][, ...args])</code><span><a class=\"mark\" href=\"#consoleinfodata-args\" id=\"consoleinfodata-args\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_info_data_args\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v0.1.100</span>\n</div>\n<ul>\n<li><code>data</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n<li><code>...args</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n</ul>\n<p>The <code>console.info()</code> function is an alias for <a href=\"#consolelogdata-args\"><code>console.log()</code></a>.</p>\n<h4><code>console.log([data][, ...args])</code><span><a class=\"mark\" href=\"#consolelogdata-args\" id=\"consolelogdata-args\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_log_data_args\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v0.1.100</span>\n</div>\n<ul>\n<li><code>data</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n<li><code>...args</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n</ul>\n<p>Prints to <code>stdout</code> with newline. Multiple arguments can be passed, with the\nfirst used as the primary message and all additional used as substitution\nvalues similar to <a href=\"http://man7.org/linux/man-pages/man3/printf.3.html\"><code>printf(3)</code></a> (the arguments are all passed to\n<a href=\"util.html#utilformatformat-args\"><code>util.format()</code></a>).</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> count = <span class=\"hljs-number\">5</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'count: %d'</span>, count);\n<span class=\"hljs-comment\">// Prints: count: 5, to stdout</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'count:'</span>, count);\n<span class=\"hljs-comment\">// Prints: count: 5, to stdout</span></code></pre>\n<p>See <a href=\"util.html#utilformatformat-args\"><code>util.format()</code></a> for more information.</p>\n<h4><code>console.table(tabularData[, properties])</code><span><a class=\"mark\" href=\"#consoletabletabulardata-properties\" id=\"consoletabletabulardata-properties\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_table_tabulardata_properties\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v10.0.0</span>\n</div>\n<ul>\n<li><code>tabularData</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n<li><code>properties</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\" class=\"type\">&#x3C;string[]></a> Alternate properties for constructing the table.</li>\n</ul>\n<p>Try to construct a table with the columns of the properties of <code>tabularData</code>\n(or use <code>properties</code>) and rows of <code>tabularData</code> and log it. Falls back to just\nlogging the argument if it can't be parsed as tabular.</p>\n<pre><code class=\"language-js\"><span class=\"hljs-comment\">// These can't be parsed as tabular data</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">table</span>(<span class=\"hljs-title class_\">Symbol</span>());\n<span class=\"hljs-comment\">// Symbol()</span>\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">table</span>(<span class=\"hljs-literal\">undefined</span>);\n<span class=\"hljs-comment\">// undefined</span>\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">table</span>([{ <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-string\">'Y'</span> }, { <span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'Z'</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">2</span> }]);\n<span class=\"hljs-comment\">// ┌─────────┬─────┬─────┐</span>\n<span class=\"hljs-comment\">// │ (index) │  a  │  b  │</span>\n<span class=\"hljs-comment\">// ├─────────┼─────┼─────┤</span>\n<span class=\"hljs-comment\">// │    0    │  1  │ 'Y' │</span>\n<span class=\"hljs-comment\">// │    1    │ 'Z' │  2  │</span>\n<span class=\"hljs-comment\">// └─────────┴─────┴─────┘</span>\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">table</span>([{ <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-string\">'Y'</span> }, { <span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'Z'</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">2</span> }], [<span class=\"hljs-string\">'a'</span>]);\n<span class=\"hljs-comment\">// ┌─────────┬─────┐</span>\n<span class=\"hljs-comment\">// │ (index) │  a  │</span>\n<span class=\"hljs-comment\">// ├─────────┼─────┤</span>\n<span class=\"hljs-comment\">// │    0    │  1  │</span>\n<span class=\"hljs-comment\">// │    1    │ 'Z' │</span>\n<span class=\"hljs-comment\">// └─────────┴─────┘</span></code></pre>\n<h4><code>console.time([label])</code><span><a class=\"mark\" href=\"#consoletimelabel\" id=\"consoletimelabel\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_time_label\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v0.1.104</span>\n</div>\n<ul>\n<li><code>label</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\" class=\"type\">&#x3C;string></a> <strong>Default:</strong> <code>'default'</code></li>\n</ul>\n<p>Starts a timer that can be used to compute the duration of an operation. Timers\nare identified by a unique <code>label</code>. Use the same <code>label</code> when calling\n<a href=\"#consoletimeendlabel\"><code>console.timeEnd()</code></a> to stop the timer and output the elapsed time in\nsuitable time units to <code>stdout</code>. For example, if the elapsed\ntime is 3869ms, <code>console.timeEnd()</code> displays \"3.869s\".</p>\n<h4><code>console.timeEnd([label])</code><span><a class=\"mark\" href=\"#consoletimeendlabel\" id=\"consoletimeendlabel\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_timeend_label\"></a></h4>\n<div class=\"api_metadata\">\n<details class=\"changelog\"><summary>History</summary>\n<table>\n<tbody><tr><th>Version</th><th>Changes</th></tr>\n<tr><td>v13.0.0</td>\n<td><p>The elapsed time is displayed with a suitable time unit.</p></td></tr>\n<tr><td>v6.0.0</td>\n<td><p>This method no longer supports multiple calls that don't map to individual <code>console.time()</code> calls; see below for details.</p></td></tr>\n<tr><td>v0.1.104</td>\n<td><p><span>Added in: v0.1.104</span></p></td></tr>\n</tbody></table>\n</details>\n</div>\n<ul>\n<li><code>label</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\" class=\"type\">&#x3C;string></a> <strong>Default:</strong> <code>'default'</code></li>\n</ul>\n<p>Stops a timer that was previously started by calling <a href=\"#consoletimelabel\"><code>console.time()</code></a> and\nprints the result to <code>stdout</code>:</p>\n<pre><code class=\"language-js\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">time</span>(<span class=\"hljs-string\">'bunch-of-stuff'</span>);\n<span class=\"hljs-comment\">// Do a bunch of stuff.</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">timeEnd</span>(<span class=\"hljs-string\">'bunch-of-stuff'</span>);\n<span class=\"hljs-comment\">// Prints: bunch-of-stuff: 225.438ms</span></code></pre>\n<h4><code>console.timeLog([label][, ...data])</code><span><a class=\"mark\" href=\"#consoletimeloglabel-data\" id=\"consoletimeloglabel-data\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_timelog_label_data\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v10.7.0</span>\n</div>\n<ul>\n<li><code>label</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\" class=\"type\">&#x3C;string></a> <strong>Default:</strong> <code>'default'</code></li>\n<li><code>...data</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n</ul>\n<p>For a timer that was previously started by calling <a href=\"#consoletimelabel\"><code>console.time()</code></a>, prints\nthe elapsed time and other <code>data</code> arguments to <code>stdout</code>:</p>\n<pre><code class=\"language-js\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">time</span>(<span class=\"hljs-string\">'process'</span>);\n<span class=\"hljs-keyword\">const</span> value = <span class=\"hljs-title function_\">expensiveProcess1</span>(); <span class=\"hljs-comment\">// Returns 42</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">timeLog</span>(<span class=\"hljs-string\">'process'</span>, value);\n<span class=\"hljs-comment\">// Prints \"process: 365.227ms 42\".</span>\n<span class=\"hljs-title function_\">doExpensiveProcess2</span>(value);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">timeEnd</span>(<span class=\"hljs-string\">'process'</span>);</code></pre>\n<h4><code>console.trace([message][, ...args])</code><span><a class=\"mark\" href=\"#consoletracemessage-args\" id=\"consoletracemessage-args\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_trace_message_args\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v0.1.104</span>\n</div>\n<ul>\n<li><code>message</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n<li><code>...args</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n</ul>\n<p>Prints to <code>stderr</code> the string <code>'Trace: '</code>, followed by the <a href=\"util.html#utilformatformat-args\"><code>util.format()</code></a>\nformatted message and stack trace to the current position in the code.</p>\n<pre><code class=\"language-js\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">trace</span>(<span class=\"hljs-string\">'Show me'</span>);\n<span class=\"hljs-comment\">// Prints: (stack trace will vary based on where trace is called)</span>\n<span class=\"hljs-comment\">//  Trace: Show me</span>\n<span class=\"hljs-comment\">//    at repl:2:9</span>\n<span class=\"hljs-comment\">//    at REPLServer.defaultEval (repl.js:248:27)</span>\n<span class=\"hljs-comment\">//    at bound (domain.js:287:14)</span>\n<span class=\"hljs-comment\">//    at REPLServer.runBound [as eval] (domain.js:300:12)</span>\n<span class=\"hljs-comment\">//    at REPLServer.&#x3C;anonymous> (repl.js:412:12)</span>\n<span class=\"hljs-comment\">//    at emitOne (events.js:82:20)</span>\n<span class=\"hljs-comment\">//    at REPLServer.emit (events.js:169:7)</span>\n<span class=\"hljs-comment\">//    at REPLServer.Interface._onLine (readline.js:210:10)</span>\n<span class=\"hljs-comment\">//    at REPLServer.Interface._line (readline.js:549:8)</span>\n<span class=\"hljs-comment\">//    at REPLServer.Interface._ttyWrite (readline.js:826:14)</span></code></pre>\n<h4><code>console.warn([data][, ...args])</code><span><a class=\"mark\" href=\"#consolewarndata-args\" id=\"consolewarndata-args\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_warn_data_args\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v0.1.100</span>\n</div>\n<ul>\n<li><code>data</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n<li><code>...args</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\" class=\"type\">&#x3C;any></a></li>\n</ul>\n<p>The <code>console.warn()</code> function is an alias for <a href=\"#consoleerrordata-args\"><code>console.error()</code></a>.</p>\n</section><section><h3>Inspector only methods<span><a class=\"mark\" href=\"#inspector-only-methods\" id=\"inspector-only-methods\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_inspector_only_methods\"></a></h3>\n<p>The following methods are exposed by the V8 engine in the general API but do\nnot display anything unless used in conjunction with the <a href=\"debugger.html\">inspector</a>\n(<code>--inspect</code> flag).</p>\n<h4><code>console.profile([label])</code><span><a class=\"mark\" href=\"#consoleprofilelabel\" id=\"consoleprofilelabel\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_profile_label\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v8.0.0</span>\n</div>\n<ul>\n<li><code>label</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\" class=\"type\">&#x3C;string></a></li>\n</ul>\n<p>This method does not display anything unless used in the inspector. The\n<code>console.profile()</code> method starts a JavaScript CPU profile with an optional\nlabel until <a href=\"#consoleprofileendlabel\"><code>console.profileEnd()</code></a> is called. The profile is then added to\nthe <strong>Profile</strong> panel of the inspector.</p>\n<pre><code class=\"language-js\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">profile</span>(<span class=\"hljs-string\">'MyLabel'</span>);\n<span class=\"hljs-comment\">// Some code</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">profileEnd</span>(<span class=\"hljs-string\">'MyLabel'</span>);\n<span class=\"hljs-comment\">// Adds the profile 'MyLabel' to the Profiles panel of the inspector.</span></code></pre>\n<h4><code>console.profileEnd([label])</code><span><a class=\"mark\" href=\"#consoleprofileendlabel\" id=\"consoleprofileendlabel\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_profileend_label\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v8.0.0</span>\n</div>\n<ul>\n<li><code>label</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\" class=\"type\">&#x3C;string></a></li>\n</ul>\n<p>This method does not display anything unless used in the inspector. Stops the\ncurrent JavaScript CPU profiling session if one has been started and prints\nthe report to the <strong>Profiles</strong> panel of the inspector. See\n<a href=\"#consoleprofilelabel\"><code>console.profile()</code></a> for an example.</p>\n<p>If this method is called without a label, the most recently started profile is\nstopped.</p>\n<h4><code>console.timeStamp([label])</code><span><a class=\"mark\" href=\"#consoletimestamplabel\" id=\"consoletimestamplabel\">#</a></span><a aria-hidden=\"true\" class=\"legacy\" id=\"console_console_timestamp_label\"></a></h4>\n<div class=\"api_metadata\">\n<span>Added in: v8.0.0</span>\n</div>\n<ul>\n<li><code>label</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\" class=\"type\">&#x3C;string></a></li>\n</ul>\n<p>This method does not display anything unless used in the inspector. The\n<code>console.timeStamp()</code> method adds an event with the label <code>'label'</code> to the\n<strong>Timeline</strong> panel of the inspector.</p></section>\n        <!-- API END -->\n      </div>\n    </div>\n  </div>\n</body>\n</html>\n"